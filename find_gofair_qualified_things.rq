#+ summary: Find things introduced in signed nanopublications that are not retracted or superseded
#+ method: GET
#+ pagination: 1000
#+ endpoint_in_url: False

prefix np: <http://www.nanopub.org/nschema#>
prefix npa: <http://purl.org/nanopub/admin/>
prefix npx: <http://purl.org/nanopub/x/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix dct: <http://purl.org/dc/terms/>

select ?thing ?label ?description ?np ?date ?pubkey ?qualifier where {
  graph npa:graph {
    ?np npa:hasHeadGraph ?h .
    ?np dct:created ?date .
    ?np npa:hasValidSignatureForPublicKey ?pubkey .
  }
  graph ?h {
    ?np np:hasAssertion ?a .
    ?np np:hasPublicationInfo ?i.
  }
  graph ?a {
    ?thing a ?_type_iri .
    ?thing rdfs:label ?label .
    optional {
      ?thing rdfs:comment ?comment .
    }
    optional {
      ?thing dct:description ?dctdesc .
    }
  }
  graph ?i {
    ?np (npx:introduces|npx:describes) ?thing .
  }
  filter not exists {
    graph npa:graph {
      ?newversion npa:hasHeadGraph ?nh .
      ?newversion npa:hasValidSignatureForPublicKey ?pubkey .
    }
    graph ?nh {
      ?newversion np:hasPublicationInfo ?ni .
    }
    graph ?ni {
      ?newversion npx:supersedes ?np .
    }
  }
  filter not exists {
    graph npa:graph {
      ?retraction npa:hasHeadGraph ?rh .
      ?retraction npa:hasValidSignatureForPublicKey ?pubkey .
    }
    graph ?rh {
      ?retraction np:hasAssertion ?ra .
    }
    graph ?ra {
      ?somebody npx:retracts ?np .
    }
  }
  bind(coalesce(?comment, ?dctdesc, "") as ?description)
  bind(concat(" ",lcase(str(?label))," ",lcase(str(?description))," ") as ?text)
  filter( contains(?text, lcase(str(?_searchterm))) )

  optional {
    bind("MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCtpcftn7kbe6toJbOTDQaCcCssEFSWqt6J4rZ02w+TfY7/eIOgJZYOlpL6G3AzO2RNmVYWRPSlMiykaFuaRuBitvk1GKfGdprfZbvXwmeOxpqCTRBQX9EnFyQyd+Ra/ajfw/UsG8skeu1xnUEpnQbpgbQYc/fvhJNN0UwEc77mOwIDAQAB"^^xsd:string as ?qpubkey)
    graph npa:graph {
      ?qualification_np npa:hasHeadGraph ?qh .
      ?qualification_np npa:hasValidSignatureForPublicKey ?qpubkey .
    }
    graph ?qh {
      ?qualification_np np:hasAssertion ?qa .
    }
    graph ?qa {
      ?qualifier npx:qualifies ?np .
    }
    filter not exists {
      graph npa:graph {
        ?qnewversion npa:hasHeadGraph ?qnh .
        ?qnewversion npa:hasValidSignatureForPublicKey ?qpubkey .
      }
      graph ?qnh {
        ?qnewversion np:hasPublicationInfo ?qni .
      }
      graph ?qni {
        ?qnewversion npx:supersedes ?qualification_np .
      }
    }
    filter not exists {
      graph npa:graph {
        ?qretraction npa:hasHeadGraph ?qrh .
        ?qretraction npa:hasValidSignatureForPublicKey ?qpubkey .
      }
      graph ?qrh {
        ?qretraction np:hasAssertion ?ra .
      }
      graph ?qra {
        ?qsomebody npx:retracts ?qualification_np .
      }
    }
  }
}
