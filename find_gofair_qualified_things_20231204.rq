#+ summary: Find things (optionally of the given type) introduced in nanopubs with info about any retractions, new versions, and qualifications by GO FAIR; nanopubs that were disapproved by a GO FAIR member are not shown
#+ method: GET
#+ pagination: 10000

prefix np: <http://www.nanopub.org/nschema#>
prefix npa: <http://purl.org/nanopub/admin/>
prefix npx: <http://purl.org/nanopub/x/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix dct: <http://purl.org/dc/terms/>

select distinct ?thing ?label ?description ?np ?date ?pubkey ?retraction ?newversion ?qualifier ?qualification_np where {
  graph npa:graph {
    ?np npa:hasHeadGraph ?h .
    ?np dct:created ?date .
    ?np npa:hasValidSignatureForPublicKey ?pubkey .
  }
  graph ?h {
    ?np np:hasAssertion ?a .
    ?np np:hasPublicationInfo ?i.
  }
  graph ?a {
    ?thing a ?__type_iri .
    ?thing rdfs:label ?label .
    optional {
      ?thing rdfs:comment ?comment .
    }
    optional {
      ?thing dct:description ?dctdesc .
    }
  }
  graph ?i {
    ?np (npx:introduces|npx:describes) ?thing .
  }
  optional {
    graph npa:graph {
      ?newversion npa:hasHeadGraph ?nh .
      ?newversion npa:hasValidSignatureForPublicKey ?pubkey .
    }
    graph ?nh {
      ?newversion np:hasPublicationInfo ?ni .
    }
    graph ?ni {
      ?newversion npx:supersedes ?np .
    }
  }
  optional {
    graph npa:graph {
      ?retraction npa:hasHeadGraph ?rh .
      ?retraction npa:hasValidSignatureForPublicKey ?pubkey .
    }
    graph ?rh {
      ?retraction np:hasAssertion ?ra .
    }
    graph ?ra {
      ?somebody npx:retracts ?np .
    }
  }
  bind(coalesce(?comment, ?dctdesc, "") as ?description)
  bind(concat(" ",lcase(str(?label))," ",lcase(str(?description))," ") as ?text)
  filter( contains(?text, lcase(str(?_searchterm))) )

  optional {
    graph npa:graph {
      ?disapproval npa:hasHeadGraph ?dh .
      ?disapproval npa:hasValidSignatureForPublicKey ?dpubkey .
      values ?dpubkey {
        "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCtpcftn7kbe6toJbOTDQaCcCssEFSWqt6J4rZ02w+TfY7/eIOgJZYOlpL6G3AzO2RNmVYWRPSlMiykaFuaRuBitvk1GKfGdprfZbvXwmeOxpqCTRBQX9EnFyQyd+Ra/ajfw/UsG8skeu1xnUEpnQbpgbQYc/fvhJNN0UwEc77mOwIDAQAB"^^xsd:string
        "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDO4xkU+/dGujq1raR66QtRqquMxiJ9hm2uzc2uBj7bCBBRnWhTw7M8f77BqAFHShgxqxYTr2do7/tVmoKeM51ISyttxWrh9ebZRoz5o6Muxt7HyA4sLHAmnixeZ5VJfZzsKAmVN23Y2ZiCqMoXjtcp5jO2lOC0AXaGPftnaA8b9QIDAQAB"^^xsd:string
        "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCFntPrMZqvg2kVhCNArNnEn37ddXGwZ/0r4C8CS4lDry7C7YkYgng9yb0UMZQUHiTVkR/5A4m/xjE+Vy+AnwcWUeB75SfGZjE5ylI6VeHjTHi9+2hh2PHYIWnkhU4WHl3COEnxSSa/VouvPzZ2BIWLH6fTrq7NNL3RF5hGegGG0QIDAQAB"^^xsd:string

"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDf2pIMH+lWdxLr57z5pnARHiHLKo2J0kCw/tfj//WpFcdEs9c95kowA8R2uR/fSbL9wYS/OZAz0CV1tAeynxbGoyvYQAEUIAXkqC88NBR4uQeyF0rEwCujGHs8HGQLFuRpdWjf2OsyH3hc+6PNHmWksgD2g8AJU7ujPoksI7T9MwIDAQAB"^^xsd:string  # Dirk Devriendt	0000-0002-6514-0173
"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDVdYrQt6zJow+K70Ct7cVEQnnoKDjkI8H0lI6dkgBNbekHY7zv5RNeqFHIhWgbNS+PICvZpqZhnPSBpKrGggiReyPjSRX0vyj/1fwzB3DXKN7QLn/34yIZ1kiW2w9VlMsTm301FsJRjDcEV7SNfejBOt1ZW0Ge3VWzQaSNZNUlDQIDAQAB"^^xsd:string  # Ruben Peeters	0000-0002-0905-7033
"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDQhERLOLXMGB9OewEiwCGA6Nv2tNWO1CeQrY6JT026PuZ5rdf+CmTSdINGYyID6HPXDDZmhisgcP3ik3OEKyx7AyHr4b6MOkZOsaM+wpx+4DPqgFAhsMHEbwLN3xw47CknBow804OEviWTiKsitsKi7vZB12j9G0aBuqvar2pngwIDAQAB"^^xsd:string  # Gerhard Burger	0000-0003-1062-5576
"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCmuNEj4ElDZJ16VEbGLAt860vRLkkabjqt+pGDygqoGhpc8HLMY+brE+YUb23iDU7Y0ItXlnf7jtd4TL4s2gcSagJ/9Kh5nlrFHDmt3Qah7GxjEvnojLxGzkWHtNCgwsQ8xdvWjMXtnXSxLE5D/T3eXWWj180rTrgy2CSsQC6iEQIDAQAB"^^xsd:string  # Anastasios Papadiamantis	0000-0002-1297-3104
"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCRBJS1FO8yfz2gQXURCQCWPLNm5dBno9LHowhtdLkOp5I/bvMQtXrQgd18R5l3i5Zr6ETKrKZPXLDtomByDVfa9vBvdtPs/PwGcNtU+mP5Sz3nqbLbi6FdD1toKGZvIp5KlrpzYmovD7op0t8c3MjGaGD/PSCi8+H7EgcQ6fwpWQIDAQAB"^^xsd:string  # Anne Foullieux	0000-0002-1784-2920
"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDGCP/y01r6MpeqNCZzw6EyZDrkQpxpQl8iPaXtlH7ZEUuh0a7pGQFFC5wJdNifPAJzqobvV6LvVkFYfmFcE66IdFSBkAAyt1vTGNbenUjk4ylzN7JmwH2hVG/0f9vaGJ/S3Ms8loQ4cvCr+/W8B8b2GZb69GJ1ky4AbzWGBpvwmQIDAQAB"^^xsd:string  # Iseult Lynch	0000-0003-4250-4584

      }
    }
    graph ?dh {
      ?disapproval np:hasAssertion ?da .
    }
    graph ?da {
      ?dsomebody ( npx:disapproves-of | npx:disapprovesOf ) ?np .
    }
  }
  filter (!bound(?disapproval))  # No idea why "filter not exists" above doesn't work...

  optional {
    values ?qpubkey {
      "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCtpcftn7kbe6toJbOTDQaCcCssEFSWqt6J4rZ02w+TfY7/eIOgJZYOlpL6G3AzO2RNmVYWRPSlMiykaFuaRuBitvk1GKfGdprfZbvXwmeOxpqCTRBQX9EnFyQyd+Ra/ajfw/UsG8skeu1xnUEpnQbpgbQYc/fvhJNN0UwEc77mOwIDAQAB"^^xsd:string
      "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDO4xkU+/dGujq1raR66QtRqquMxiJ9hm2uzc2uBj7bCBBRnWhTw7M8f77BqAFHShgxqxYTr2do7/tVmoKeM51ISyttxWrh9ebZRoz5o6Muxt7HyA4sLHAmnixeZ5VJfZzsKAmVN23Y2ZiCqMoXjtcp5jO2lOC0AXaGPftnaA8b9QIDAQAB"^^xsd:string
      "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCFntPrMZqvg2kVhCNArNnEn37ddXGwZ/0r4C8CS4lDry7C7YkYgng9yb0UMZQUHiTVkR/5A4m/xjE+Vy+AnwcWUeB75SfGZjE5ylI6VeHjTHi9+2hh2PHYIWnkhU4WHl3COEnxSSa/VouvPzZ2BIWLH6fTrq7NNL3RF5hGegGG0QIDAQAB"^^xsd:string

"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDf2pIMH+lWdxLr57z5pnARHiHLKo2J0kCw/tfj//WpFcdEs9c95kowA8R2uR/fSbL9wYS/OZAz0CV1tAeynxbGoyvYQAEUIAXkqC88NBR4uQeyF0rEwCujGHs8HGQLFuRpdWjf2OsyH3hc+6PNHmWksgD2g8AJU7ujPoksI7T9MwIDAQAB"^^xsd:string  # Dirk Devriendt	0000-0002-6514-0173
"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDVdYrQt6zJow+K70Ct7cVEQnnoKDjkI8H0lI6dkgBNbekHY7zv5RNeqFHIhWgbNS+PICvZpqZhnPSBpKrGggiReyPjSRX0vyj/1fwzB3DXKN7QLn/34yIZ1kiW2w9VlMsTm301FsJRjDcEV7SNfejBOt1ZW0Ge3VWzQaSNZNUlDQIDAQAB"^^xsd:string  # Ruben Peeters	0000-0002-0905-7033
"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDQhERLOLXMGB9OewEiwCGA6Nv2tNWO1CeQrY6JT026PuZ5rdf+CmTSdINGYyID6HPXDDZmhisgcP3ik3OEKyx7AyHr4b6MOkZOsaM+wpx+4DPqgFAhsMHEbwLN3xw47CknBow804OEviWTiKsitsKi7vZB12j9G0aBuqvar2pngwIDAQAB"^^xsd:string  # Gerhard Burger	0000-0003-1062-5576
"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCmuNEj4ElDZJ16VEbGLAt860vRLkkabjqt+pGDygqoGhpc8HLMY+brE+YUb23iDU7Y0ItXlnf7jtd4TL4s2gcSagJ/9Kh5nlrFHDmt3Qah7GxjEvnojLxGzkWHtNCgwsQ8xdvWjMXtnXSxLE5D/T3eXWWj180rTrgy2CSsQC6iEQIDAQAB"^^xsd:string  # Anastasios Papadiamantis	0000-0002-1297-3104
"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCRBJS1FO8yfz2gQXURCQCWPLNm5dBno9LHowhtdLkOp5I/bvMQtXrQgd18R5l3i5Zr6ETKrKZPXLDtomByDVfa9vBvdtPs/PwGcNtU+mP5Sz3nqbLbi6FdD1toKGZvIp5KlrpzYmovD7op0t8c3MjGaGD/PSCi8+H7EgcQ6fwpWQIDAQAB"^^xsd:string  # Anne Foullieux	0000-0002-1784-2920
"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDGCP/y01r6MpeqNCZzw6EyZDrkQpxpQl8iPaXtlH7ZEUuh0a7pGQFFC5wJdNifPAJzqobvV6LvVkFYfmFcE66IdFSBkAAyt1vTGNbenUjk4ylzN7JmwH2hVG/0f9vaGJ/S3Ms8loQ4cvCr+/W8B8b2GZb69GJ1ky4AbzWGBpvwmQIDAQAB"^^xsd:string  # Iseult Lynch	0000-0003-4250-4584

    }
    graph npa:graph {
      ?qualification_np npa:hasHeadGraph ?qh .
      ?qualification_np npa:hasValidSignatureForPublicKey ?qpubkey .
    }
    graph ?qh {
      ?qualification_np np:hasAssertion ?qa .
    }
    graph ?qa {
      ?qualifier npx:qualifies ?np .
    }
    filter not exists {
      graph npa:graph {
        ?qnewversion npa:hasHeadGraph ?qnh .
        ?qnewversion npa:hasValidSignatureForPublicKey ?qpubkey .
      }
      graph ?qnh {
        ?qnewversion np:hasPublicationInfo ?qni .
      }
      graph ?qni {
        ?qnewversion npx:supersedes ?qualification_np .
      }
    }
    filter not exists {
      graph npa:graph {
        ?qretraction npa:hasHeadGraph ?qrh .
        ?qretraction npa:hasValidSignatureForPublicKey ?qpubkey .
      }
      graph ?qrh {
        ?qretraction np:hasAssertion ?ra .
      }
      graph ?qra {
        ?qsomebody npx:retracts ?qualification_np .
      }
    }
  }
}
order by asc(?label)
